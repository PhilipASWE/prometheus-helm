{{- if and .Values.kubelet.enabled .Values.kubernetesServiceMonitors.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ template "kube-prometheus-stack.fullname" . }}-kubelet
  {{- if .Values.prometheus.prometheusSpec.ignoreNamespaceSelectors }}
  namespace: {{ .Values.kubelet.namespace }}
  {{- else }}
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  {{- end }}
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}-kubelet
  {{- with .Values.kubelet.serviceMonitor.additionalLabels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- include "kube-prometheus-stack.labels" . | indent 4 }}
spec:
  {{- include "servicemonitor.scrapeLimits" .Values.kubelet.serviceMonitor | nindent 2 }}
  {{- with .Values.kubelet.serviceMonitor.attachMetadata }}
  attachMetadata:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  endpoints:
  {{- include "kube-prometheus-stack.kubelet.endpoint" (list $ "") }}
  {{- if .Values.kubelet.serviceMonitor.cAdvisor }}
  {{- include "kube-prometheus-stack.kubelet.endpoint" (list $ "cAdvisor") }}
    path: /metrics/cadvisor
  {{- end }}
  {{- if .Values.kubelet.serviceMonitor.probes }}
  {{- include "kube-prometheus-stack.kubelet.endpoint" (list $ "probes") }}
    path: /metrics/probes
  {{- end }}
  {{- if .Values.kubelet.serviceMonitor.resource }}
  {{- include "kube-prometheus-stack.kubelet.endpoint" (list $ "resource") }}
    path: {{ .Values.kubelet.serviceMonitor.resourcePath }}
  {{- end }}
  {{- if .Values.kubelet.serviceMonitor.slis }}
  {{- include "kube-prometheus-stack.kubelet.endpoint" (list $ "slis") }}
    path: /metrics/slis
  {{- end }}
  jobLabel: k8s-app
  namespaceSelector:
    matchNames:
    - {{ .Values.kubelet.namespace }}
  selector:
    matchLabels:
      app.kubernetes.io/name: kubelet
      k8s-app: kubelet
{{- end}}
