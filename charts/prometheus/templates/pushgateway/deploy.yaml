{{- with .Values.pushgateway }}
{{- if .enabled -}}
apiVersion: {{ template "prometheus.deployment.apiVersion" $ }}
kind: Deployment
metadata:
  {{- with .deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "prometheus.pushgateway.labels" $ | nindent 4 }}
  name: {{ template "prometheus.pushgateway.fullname" $ }}
  {{- include "prometheus.namespace" $ | nindent 2 }}
spec:
  selector:
    {{- with $.Values.schedulerName }}
    schedulerName: "{{ . }}"
    {{- end }}
    matchLabels:
      {{- include "prometheus.pushgateway.matchLabels" $ | nindent 6 }}
  replicas: {{ .replicaCount }}
  {{- with .strategy }}
  strategy:
    {{- toYaml . | trim | nindent 4 }}
    {{- if eq .type "Recreate" }}
    rollingUpdate: null
    {{- end }}
  {{- end }}
  template:
    metadata:
      {{- with .podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus.pushgateway.labels" $ | nindent 8 }}
        {{- with .podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end}}
    spec:
      serviceAccountName: {{ template "prometheus.serviceAccountName.pushgateway" $ }}
      {{- with .extraInitContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .priorityClassName }}
      priorityClassName: "{{ . }}"
      {{- end }}
      containers:
        - name: {{ template "prometheus.name" $ }}-{{ .name }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: "{{ .image.pullPolicy }}"
          {{- with .containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            {{- range $key, $value := .extraArgs }}
            {{- $stringvalue := toString $value }}
            {{- if eq $stringvalue "true" }}
            - --{{ $key }}
            {{- else }}
            - --{{ $key }}={{ $value }}
            {{- end }}
            {{- end }}
          ports:
            - containerPort: 9091
          livenessProbe:
            httpGet:
              {{- if (index $.Values "pushgateway" "extraArgs" "web.route-prefix") }}
              path: /{{ index $.Values "pushgateway" "extraArgs" "web.route-prefix" }}/-/healthy
              {{- else }}
              path: /-/healthy
              {{- end }}
              port: 9091
              {{- with .probeHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            initialDelaySeconds: 10
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              {{- if (index $.Values "pushgateway" "extraArgs" "web.route-prefix") }}
              path: /{{ index $.Values "pushgateway" "extraArgs" "web.route-prefix" }}/-/ready
              {{- else }}
              path: /-/ready
              {{- end }}
              port: 9091
              {{- with .probeHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            initialDelaySeconds: 10
            timeoutSeconds: 10
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .persistentVolume.enabled }}
          volumeMounts:
            - name: storage-volume
              mountPath: "{{ .persistentVolume.mountPath }}"
              subPath: "{{ .persistentVolume.subPath }}"
          {{- end }}
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: storage-volume
        {{- if .persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .persistentVolume.existingClaim }}{{ .persistentVolume.existingClaim }}{{- else }}{{ template "prometheus.server.fullname" $ }}{{- end }}
        {{- else }}
          emptyDir:
          {{- with .emptyDir.sizeLimit }}
            sizeLimit: {{ . }}
          {{- else }}
            {}
          {{- end -}}
        {{- end -}}
{{- end -}}
{{- end }}
