{{- $cmReloadAlertmngr := $.Values.configmapReload.alertmanager -}}

{{- with .Values.alertmanager }}
{{- if and .enabled .statefulSet.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  {{- with .statefulSet.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "prometheus.alertmanager.labels" $ | nindent 4 }}
    {{- with .statefulSet.labels}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  name: {{ template "prometheus.alertmanager.fullname" $ }}
  {{- include "prometheus.namespace" $ | indent 2 }}
spec:
  serviceName: {{ template "prometheus.alertmanager.fullname" $ }}-headless
  selector:
    matchLabels:
      {{- include "prometheus.alertmanager.matchLabels" $ | nindent 6 }}
  replicas: {{ .replicaCount }}
  podManagementPolicy: {{ .statefulSet.podManagementPolicy }}
  template:
    metadata:
      {{- with .podAnnotations }}
      annotations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus.alertmanager.labels" $ | nindent 8 }}
        {{- with .podLabels}}
        {{- toYaml . | nindent 8 }}
        {{- end}}
    spec:
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .schedulerName }}
      schedulerName: "{{ . }}"
      {{- end }}
      serviceAccountName: {{ template "prometheus.serviceAccountName.alertmanager" $ }}
      {{- with .priorityClassName }}
      priorityClassName: "{{ . }}"
      {{- end }}
      containers:
        - name: {{ template "prometheus.name" $ }}-{{ .name }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: "{{ .image.pullPolicy }}"
          {{- with .containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- range $key, $value := .extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path={{ .persistentVolume.mountPath }}
            {{- if .statefulSet.headless.enableMeshPeer }}
            - --cluster.advertise-address=[$(POD_IP)]:6783
            - --cluster.listen-address=0.0.0.0:6783
            {{- range $n := until (.replicaCount | int) }}
            - --cluster.peer={{ template "prometheus.alertmanager.fullname" $ }}-{{ $n }}.{{ template "prometheus.alertmanager.fullname" $ }}-headless:6783
            {{- end }}
            {{- else }}
            - --cluster.listen-address=
            {{- end }}
            {{- range $key, $value := .extraArgs }}
            - --{{ $key }}={{ $value }}
            {{- end }}
            {{- with .baseURL }}
            - --web.external-url={{ . }}
            {{- end }}

          ports:
            - containerPort: 9093
            {{- if .statefulSet.headless.enableMeshPeer }}
            - containerPort: 6783
            {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .prefixURL }}/#/status
              port: 9093
              {{- with .probeHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
          {{- with .resources }}
          resources:
            {{- toYaml . | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "{{ .persistentVolume.mountPath }}"
              subPath: "{{ .persistentVolume.subPath }}"
            {{- range .extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
        {{- if $cmReloadAlertmngr.enabled }}
        - name: {{ template "prometheus.name" $ }}-{{ .name }}-{{ $cmReloadAlertmngr.name }}
          image: "{{ $cmReloadAlertmngr.image.repository }}:{{ $cmReloadAlertmngr.image.tag }}"
          imagePullPolicy: "{{ $cmReloadAlertmngr.image.pullPolicy }}"
          {{- with $cmReloadAlertmngr.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9093{{ .prefixURL }}/-/reload
            {{- range $key, $value := $cmReloadAlertmngr.extraArgs }}
            - --{{ $key }}={{ $value }}
            {{- end }}
          {{- with $cmReloadAlertmngr.port }}
          ports:
            - containerPort: {{ . }}
          {{- end }}
          {{- with $cmReloadAlertmngr.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
        {{- end }}
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-volume
          {{- with .configFromSecret }}
          secret:
            secretName: {{ .configFromSecret }}
          {{- else }}
          configMap:
            name: {{ if .configMapOverrideName }}{{ $.Release.Name }}-{{ .configMapOverrideName }}{{- else }}{{ template "prometheus.alertmanager.fullname" $ }}{{- end }}
          {{- end }}
        {{- range .extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            {{- with .optional }}
            optional: {{ . }}
            {{- end }}
        {{- end }}
  {{- if .persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage-volume
        {{- with .persistentVolume.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- toYaml .persistentVolume.accessModes | nindent 10 }}
        resources:
          requests:
            storage: "{{ .persistentVolume.size }}"
        {{- if .persistentVolume.storageClass }}
        {{- if (eq "-" .persistentVolume.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .persistentVolume.storageClass }}"
        {{- end }}
        {{- end }}
  {{- else }}
        - name: storage-volume
          emptyDir:
          {{- with .emptyDir.sizeLimit }}
            sizeLimit: {{ . }}
          {{- else }}
            {}
          {{- end -}}
  {{- end }}
{{- end }}
{{- end }}
