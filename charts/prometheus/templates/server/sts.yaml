{{- $cmReloadProm := $.Values.configmapReload.prometheus -}}

{{- with .Values.server }}
{{- if and .enabled .statefulSet.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  {{- with .statefulSet.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "prometheus.server.labels" $ | nindent 4 }}
    {{- with .statefulSet.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: {{ template "prometheus.server.fullname" $ }}
  {{- include "prometheus.namespace" $ | nindent 2 }}
spec:
  serviceName: {{ template "prometheus.server.fullname" $ }}-headless
  selector:
    matchLabels:
      {{- include "prometheus.server.matchLabels" $ | nindent 6 }}
  replicas: {{ .replicaCount }}
  podManagementPolicy: {{ .statefulSet.podManagementPolicy }}
  template:
    metadata:
      {{- with .podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus.server.labels" $ | nindent 8 }}
        {{- with .podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end}}
    spec:
      {{- with .priorityClassName }}
      priorityClassName: "{{ . }}"
      {{- end }}
      {{- with .schedulerName }}
      schedulerName: "{{ . }}"
      {{- end }}
      {{- include "prometheus.server.enableServiceLinks" $ | nindent 6 }}
      serviceAccountName: {{ template "prometheus.serviceAccountName.server" $ }}
      {{- with .extraInitContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        {{- if $cmReloadProm.enabled }}
        - name: {{ template "prometheus.name" $ }}-{{ .name }}-{{ $cmReloadProm.name }}
          image: "{{ $cmReloadProm.image.repository }}:{{ $cmReloadProm.image.tag }}"
          imagePullPolicy: "{{ $cmReloadProm.image.pullPolicy }}"
          {{- with $cmReloadProm.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090{{ .prefixURL }}/-/reload
            {{- range $key, $value := $cmReloadProm.extraArgs }}
            - --{{ $key }}={{ $value }}
            {{- end }}
            {{- range $cmReloadProm.extraVolumeDirs }}
            - --volume-dir={{ . }}
            {{- end }}
          {{- with $cmReloadProm.containerPort }}
          ports:
            - containerPort: {{ . }}
          {{- end }}
          {{- with $cmReloadProm.resources }}          
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            {{- range $cmReloadProm.extraConfigmapMounts }}
            - name: {{ $cmReloadProm.name }}-{{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
        {{- end }}

        - name: {{ template "prometheus.name" $ }}-{{ .name }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: "{{ .image.pullPolicy }}"
          {{- with .env }}
          env:
            {{- toYaml . | nindent 12}}
          {{- end }}
          args:
            {{- with .defaultFlagsOverride }}
            {{- toYaml . | nindent 12}}
            {{- else }}
            {{- with .prefixURL }}
            - --web.route-prefix={{ . }}
            {{- end }}
            {{- with .retention }}
            - --storage.tsdb.retention.time={{ . }}
            {{- end }}
            - --config.file={{ .configPath }}
            {{- with .storagePath }}
            - --storage.tsdb.path={{ . }}
            {{- else }}
            - --storage.tsdb.path={{ .persistentVolume.mountPath }}
            {{- end }}
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            {{- range .extraFlags }}
            - --{{ . }}
            {{- end }}
            {{- range $key, $value := .extraArgs }}
            - --{{ $key }}={{ $value }}
            {{- end }}
            {{- with .baseURL }}
            - --web.external-url={{ . }}
            {{- end }}
            {{- end }}
          ports:
            - containerPort: 9090
              {{- with .hostPort }}
              hostPort: {{ . }}
              {{- end }}
          readinessProbe:
            {{- if not .tcpSocketProbeEnabled }}
            httpGet:
              path: {{ .prefixURL }}/-/ready
              port: 9090
              scheme: {{ .probeScheme }}
              {{- with .probeHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            {{- else }}
            tcpSocket:
              port: 9090
            {{- end }}
            initialDelaySeconds: {{ .readinessProbeInitialDelay }}
            periodSeconds: {{ .readinessProbePeriodSeconds }}
            timeoutSeconds: {{ .readinessProbeTimeout }}
            failureThreshold: {{ .readinessProbeFailureThreshold }}
            successThreshold: {{ .readinessProbeSuccessThreshold }}
          livenessProbe:
            {{- if not .tcpSocketProbeEnabled }}
            httpGet:
              path: {{ .prefixURL }}/-/healthy
              port: 9090
              scheme: {{ .probeScheme }}
              {{- with .probeHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            {{- else }}
            tcpSocket:
              port: 9090
            {{- end }}
            initialDelaySeconds: {{ .livenessProbeInitialDelay }}
            periodSeconds: {{ .livenessProbePeriodSeconds }}
            timeoutSeconds: {{ .livenessProbeTimeout }}
            failureThreshold: {{ .livenessProbeFailureThreshold }}
            successThreshold: {{ .livenessProbeSuccessThreshold }}
          {{- if .startupProbe.enabled }}
          startupProbe:
            {{- if not .tcpSocketProbeEnabled }}
            httpGet:
              path: {{ .prefixURL }}/-/healthy
              port: 9090
              scheme: {{ .probeScheme }}
              {{- if .probeHeaders }}
              httpHeaders:
                {{- range .probeHeaders}}
                - name: {{ .name }}
                  value: {{ .value }}
                {{- end }}
              {{- end }}
            {{- else }}
            tcpSocket:
              port: 9090
            {{- end }}
            failureThreshold: {{ .startupProbe.failureThreshold }}
            periodSeconds: {{ .startupProbe.periodSeconds }}
            timeoutSeconds: {{ .startupProbe.timeoutSeconds }}
          {{- end }}
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: {{ .persistentVolume.mountPath }}
              subPath: "{{ .persistentVolume.subPath }}"
            {{- range .extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- range .extraConfigmapMounts }}
            - name: {{ $.name }}-{{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- range .extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- with .extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .sidecarContainers }}
        {{- range $name, $spec :=  .sidecarContainers }}
        - name: {{ $name }}
          {{- if kindIs "string" $spec }}
            {{- tpl $spec $ | nindent 10 }}
          {{- else }}
            {{- toYaml $spec | nindent 10 }}
          {{- end }}
        {{- end }}
        {{- end }}
      hostNetwork: {{ .hostNetwork }}
      {{- with .dnsPolicy }}
      dnsPolicy: {{ . }}
      {{- end }}
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .hostAliases }}
      hostAliases:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .dnsConfig }}
      dnsConfig:
        {{- toYaml . | indent 8 }}
      {{- end }}
      {{- with .securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
      volumes:
        - name: config-volume
          {{- with .configFromSecret }}
          secret:
            secretName: {{ .configFromSecret }}
          {{- else }}
          configMap:
            name: {{ if .configMapOverrideName }}{{ $.Release.Name }}-{{ .configMapOverrideName }}{{- else }}{{ template "prometheus.server.fullname" $ }}{{- end }}
          {{- end }}
        {{- range .extraHostPathMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
        {{- end }}
        {{- range $cmReloadProm.extraConfigmapMounts }}
        - name: {{ $cmReloadProm.name }}-{{ .name }}
          configMap:
            name: {{ .configMap }}
        {{- end }}
        {{- range .extraConfigmapMounts }}
        - name: {{ $.Values.server.name }}-{{ .name }}
          configMap:
            name: {{ .configMap }}
        {{- end }}
        {{- range .extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            {{- with .optional }}
            optional: {{ . }}
            {{- end }}
        {{- end }}
        {{- range $cmReloadProm.extraConfigmapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
            {{- with .optional }}
            optional: {{ . }}
            {{- end }}
        {{- end }}
        {{- with .extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
  {{- if .persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage-volume
        {{- with .persistentVolume.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .persistentVolume.labels }}
        labels:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- toYaml .persistentVolume.accessModes | nindent 10 }}
        resources:
          requests:
            storage: "{{ .persistentVolume.size }}"
        {{- if .persistentVolume.storageClass }}
        {{- if (eq "-" .persistentVolume.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .persistentVolume.storageClass }}"
        {{- end }}
        {{- end }}
  {{- else }}
        - name: storage-volume
          emptyDir:
          {{- with .emptyDir.sizeLimit }}
            sizeLimit: {{ . }}
          {{- else }}
            {}
          {{- end -}}
  {{- end }}
{{- end }}
{{- end }}
