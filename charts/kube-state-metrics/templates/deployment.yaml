apiVersion: apps/v1
{{- if .Values.autosharding.enabled }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ include "kube-state-metrics.fullname" . }}
  namespace: {{ include "kube-state-metrics.namespace" . }}
  labels:
    {{- include "kube-state-metrics.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "kube-state-metrics.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicas }}
  {{- if .Values.autosharding.enabled }}
  serviceName: {{ include "kube-state-metrics.fullname" . }}
  volumeClaimTemplates: []
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "kube-state-metrics.labels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      hostNetwork: {{ .Values.hostNetwork }}
      serviceAccountName: {{ include "kube-state-metrics.serviceAccountName" . }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        {{- omit .Values.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      containers:
        - name: {{ include "kube-state-metrics.name" . }}
          {{- if .Values.autosharding.enabled }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          {{- end }}
          args:
            {{- with .Values.extraArgs }}
            {{- toYaml . | nindent 10 }}
            {{- end }}
            {{- if .Values.service.port }}
            - --port={{ .Values.service.port | default 8080 }}
            {{- end }}
            {{- with .Values.collectors }}
            - --resources={{ . | join "," }}
            {{- end }}
            {{- with .Values.metricLabelsAllowlist }}
            - --metric-labels-allowlist={{ . | join "," }}
            {{- end }}
            {{- with .Values.metricAnnotationsAllowList }}
            - --metric-annotations-allowlist={{ . | join "," }}
            {{- end }}
            {{- with .Values.metricAllowlist }}
            - --metric-allowlist={{ . | join "," }}
            {{- end }}
            {{- with .Values.metricDenylist }}
            - --metric-denylist={{ . | join "," }}
            {{- end }}
            {{- $namespaces := list }}
            {{- if .Values.namespaces }}
            {{- range $ns := join "," .Values.namespaces | split "," }}
            {{- $namespaces = append $namespaces (tpl $ns $) }}
            {{- end }}
            {{- end }}
            {{- if .Values.releaseNamespace }}
            {{- $namespaces = append $namespaces ( include "kube-state-metrics.namespace" . ) }}
            {{- end }}
            {{- with $namespaces }}
            - --namespaces={{ . | mustUniq | join "," }}
            {{- end }}
            {{- with .Values.namespacesDenylist }}
            - --namespaces-denylist={{ tpl ( . | join ",") $ }}
            {{- end }}
            {{- if .Values.autosharding.enabled }}
            - --pod=$(POD_NAME)
            - --pod-namespace=$(POD_NAMESPACE)
            {{- end }}
            {{- if .Values.kubeconfig.enabled }}
            - --kubeconfig=/opt/k8s/.kube/config
            {{- end }}
            {{- with .Values.selfMonitor.telemetryHost }}
            - --telemetry-host={{ . }}
            {{- end }}
            {{- if .Values.selfMonitor.telemetryPort }}
            - --telemetry-port={{ .Values.selfMonitor.telemetryPort | default 8081 }}
            {{- end }}
          {{- if or .Values.kubeconfig.enabled .Values.volumeMounts }}
          volumeMounts:
            {{- if .Values.kubeconfig.enabled }}
            - name: kubeconfig
              mountPath: /opt/k8s/.kube/
              readOnly: true
            {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 10 }}
            {{- end }}
            {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.image.sha }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}@sha256:{{ .Values.image.sha }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.port | default 8080 }}
              name: "http"
            {{- if .Values.selfMonitor.enabled }}
            - containerPort: {{ .Values.selfMonitor.telemetryPort | default 8081 }}
              name: "metrics"
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port | default 8080 }}
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port | default 8080 }}
            initialDelaySeconds: 5
            timeoutSeconds: 5
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.kubeconfig.enabled .Values.volumes }}
      volumes:
        {{- if .Values.kubeconfig.enabled }}
        - name: kubeconfig
          secret:
            secretName: {{ include "kube-state-metrics.fullname" . }}-kubeconfig
        {{- end }}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
