{{- if .Values.ingress.enabled -}}
{{- $serviceName := include "prometheus-pushgateway.fullname" . }}
{{- $servicePort := .Values.service.port -}}
{{- $ingressPath := .Values.ingress.path -}}
{{- $ingressPathType := .Values.ingress.pathType -}}
{{- if .Capabilities.APIVersions.Has "networking.k8s.io/v1" }}
apiVersion: networking.k8s.io/v1
{{- else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" }}
apiVersion: networking.k8s.io/v1beta1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
{{- if .Values.ingress.annotations }}
  annotations:
{{ toYaml .Values.ingress.annotations | indent 4}}
{{- end }}
  labels:
{{ template "prometheus-pushgateway.defaultLabels" merge (dict "extraLabels" dict) .  }}
  name: {{ template "prometheus-pushgateway.fullname" . }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: '{{ .Values.ingress.className }}'
  {{- end }}
  rules:
    {{- range $host := .Values.ingress.hosts }}
    - host: {{ $host }}
      http:
        paths:
          - path: {{ $ingressPath }}
            pathType: {{ $ingressPathType }}
            backend:
              {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1" }}
              service:
                name: {{ $serviceName }}
                port:
                  {{- if $servicePort | kindIs "string" }}
                  name: {{ $servicePort }}
                  {{- else }}
                  number: {{ $servicePort }}
                  {{- end }}
              {{- else }}
              serviceName: {{ $serviceName }}
              servicePort: {{ $servicePort }}
              {{- end }}
    {{- end -}}
{{- if .Values.ingress.tls }}
  tls:
{{ toYaml .Values.ingress.tls | indent 4 }}
  {{- end -}}
{{- end -}}
