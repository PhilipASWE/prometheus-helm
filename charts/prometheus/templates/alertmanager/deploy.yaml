{{- $cmReloadAlert := $.Values.configmapReload.alertmanager -}}

{{- with .Values.alertmanager }}
{{- if and .enabled (not .statefulSet.enabled) -}}
apiVersion: {{ template "prometheus.deployment.apiVersion" $ }}
kind: Deployment
metadata:
  {{- with .deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "prometheus.alertmanager.labels" $ | nindent 4 }}
  name: {{ template "prometheus.alertmanager.fullname" $ }}
  {{- include "prometheus.namespace" $ | nindent 2 }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus.alertmanager.matchLabels" $ | nindent 6 }}
  replicas: {{ .replicaCount }}
  {{- with .strategy }}
  strategy:
    {{- toYaml . | trim | nindent 4 }}
    {{- if eq .type "Recreate" }}
    rollingUpdate: null
    {{- end }}
  {{- end }}
  template:
    metadata:
      {{- with .podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus.alertmanager.labels" $ | nindent 8 }}
        {{- with .podLabels}}
        {{- toYaml . | nindent 8 }}
        {{- end}}
    spec:
      {{- with .priorityClassName }}
      priorityClassName: "{{ . }}"
      {{- end }}
      {{- with .schedulerName }}
      schedulerName: "{{ . }}"
      {{- end }}
      serviceAccountName: {{ template "prometheus.serviceAccountName.alertmanager" $ }}
      {{- with .extraInitContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ template "prometheus.name" $ }}-{{ .name }}
          image: "{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: "{{ .image.pullPolicy }}"
          {{- with .containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- range $key, $value := .extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          args:
            - --config.file=/etc/config/{{ .configFileName }}
            - --storage.path={{ .persistentVolume.mountPath }}
            {{- if .service.enableMeshPeer }}
            - --cluster.listen-address=0.0.0.0:6783
            - --cluster.advertise-address=[$(POD_IP)]:6783
            {{- else }}
            - --cluster.listen-address=
            {{- end }}
            {{- range $key, $value := .extraArgs }}
            - --{{ $key }}={{ $value }}
            {{- end }}
            {{- with .baseURL }}
            - --web.external-url={{ . }}
            {{- end }}
            {{- range .clusterPeers }}
            - --cluster.peer={{ . }}
            {{- end }}

          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              path: {{ .prefixURL }}/-/ready
              port: 9093
              {{- with .probeHeaders }}
              httpHeaders:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "{{ .persistentVolume.mountPath }}"
              subPath: "{{ .persistentVolume.subPath }}"
            {{- range .extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- range .extraConfigmapMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}

        {{- if $cmReloadAlert.enabled }}
        - name: {{ template "prometheus.name" $ }}-{{ .name }}-{{ $cmReloadAlert.name }}
          image: "{{ $cmReloadAlert.image.repository }}:{{ $cmReloadAlert.image.tag }}"
          imagePullPolicy: "{{ $cmReloadAlert.image.pullPolicy }}"
          {{- with $cmReloadAlert.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9093{{ .prefixURL }}/-/reload
          {{- range $key, $value := $cmReloadAlert.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          {{- range $cmReloadAlert.extraVolumeDirs }}
            - --volume-dir={{ . }}
          {{- end }}
          {{- with $cmReloadAlert.containerPort }}
          ports:
            - containerPort: {{ . }}
          {{- end }}
          {{- with $cmReloadAlert.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            {{- range $cmReloadAlert.extraConfigmapMounts }}
            - name: {{ $cmReloadAlert.name }}-{{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
        {{- end }}
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-volume
          {{- with .configFromSecret }}
          secret:
            secretName: {{ .configFromSecret }}
          {{- else }}
          configMap:
            name: {{ if .configMapOverrideName }}{{ $.Release.Name }}-{{ .configMapOverrideName }}{{- else }}{{ template "prometheus.alertmanager.fullname" $ }}{{- end }}
          {{- end }}
        {{- range .extraConfigmapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
        {{- end }}
        {{- range .extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            {{- with .optional }}
            optional: {{ . }}
            {{- end }}
        {{- end }}
        {{- range $cmReloadAlert.extraConfigmapMounts }}
        - name: {{ $cmReloadAlert.name }}-{{ .name }}
          configMap:
            name: {{ .configMap }}
        {{- end }}
        - name: storage-volume
        {{- if .persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .persistentVolume.existingClaim }}{{ .persistentVolume.existingClaim }}{{- else }}{{ template "prometheus.alertmanager.fullname" $ }}{{- end }}
        {{- else }}
          emptyDir:
          {{- with .emptyDir.sizeLimit }}
            sizeLimit: {{ . }}
          {{- else }}
            {}
          {{- end -}}
        {{- end -}}
{{- end }}
{{- end }}
